/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_zpack_2eproto__INCLUDED
#define PROTOBUF_C_zpack_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _ZPack ZPack;


/* --- enums --- */


/* --- messages --- */

struct  _ZPack
{
  ProtobufCMessage base;
  char *opcode;
  char *key;
  char *val;
  protobuf_c_boolean has_valnull;
  protobuf_c_boolean valnull;
  char *newval;
  protobuf_c_boolean has_newvalnull;
  protobuf_c_boolean newvalnull;
  protobuf_c_boolean has_replicanum;
  int32_t replicanum;
};
#define ZPACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&zpack__descriptor) \
    , NULL, NULL, NULL, 0,0, NULL, 0,0, 0,0 }


/* ZPack methods */
void   zpack__init
                     (ZPack         *message);
size_t zpack__get_packed_size
                     (const ZPack   *message);
size_t zpack__pack
                     (const ZPack   *message,
                      uint8_t             *out);
size_t zpack__pack_to_buffer
                     (const ZPack   *message,
                      ProtobufCBuffer     *buffer);
ZPack *
       zpack__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   zpack__free_unpacked
                     (ZPack *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ZPack_Closure)
                 (const ZPack *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor zpack__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_zpack_2eproto__INCLUDED */
